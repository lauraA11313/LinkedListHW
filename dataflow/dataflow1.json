{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesTable",
						"type": "DatasetReference"
					},
					"name": "Sales"
				},
				{
					"dataset": {
						"referenceName": "ProductsTable",
						"type": "DatasetReference"
					},
					"name": "Products"
				},
				{
					"dataset": {
						"referenceName": "ArrivalTable",
						"type": "DatasetReference"
					},
					"name": "Arrivals"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "MarginOnSale",
						"type": "DatasetReference"
					},
					"name": "MarginOnSalesT"
				},
				{
					"dataset": {
						"referenceName": "FourItemsInfo",
						"type": "DatasetReference"
					},
					"name": "turnover"
				}
			],
			"transformations": [
				{
					"name": "SelectIdAndPrice"
				},
				{
					"name": "JoinSalesAndProducts"
				},
				{
					"name": "CleanTable"
				},
				{
					"name": "marginOnSale"
				},
				{
					"name": "marginByProduct"
				},
				{
					"name": "shop1"
				},
				{
					"name": "joinArrivalsAndNetPrice"
				},
				{
					"name": "derivedAmountSpentOnSupply"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "TotalsAndMargins"
				},
				{
					"name": "MarginPercenOnStorageAndSales"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Select3"
				}
			],
			"script": "source(output(\n\t\tid as integer,\n\t\tdatetime as timestamp,\n\t\tproduct_id as integer,\n\t\tprice as decimal(18,2),\n\t\tcost as decimal(18,2)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Sales\nsource(output(\n\t\tid as integer,\n\t\tname as string,\n\t\tcategory_id as integer,\n\t\tprice_net as decimal(18,2)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Products\nsource(output(\n\t\tid as integer,\n\t\tdatetime as timestamp,\n\t\tproduct_id as integer,\n\t\tshop_id as integer,\n\t\tqnty as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Arrivals\nProducts select(mapColumn(\n\t\tid,\n\t\tprice_net\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectIdAndPrice\nSales, SelectIdAndPrice join(product_id == SelectIdAndPrice@id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSalesAndProducts\nJoinSalesAndProducts select(mapColumn(\n\t\tid = Sales@id,\n\t\tdatetime,\n\t\tproduct_id,\n\t\tprice,\n\t\tcost,\n\t\tProdId = SelectIdAndPrice@id,\n\t\tprice_net\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CleanTable\nCleanTable derive(margin = round((multiply(divide(cost,price),minus(price,price_net))),2,7),\n\t\tprod_sold = toInteger(divide(cost,price))) ~> marginOnSale\nmarginOnSale aggregate(groupBy(product_id),\n\tmarginByProduct = sum(margin),\n\t\ttotalItemsSold = sum(prod_sold)) ~> marginByProduct\nArrivals filter(shop_id==1) ~> shop1\nshop1, SelectIdAndPrice join(product_id == SelectIdAndPrice@id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinArrivalsAndNetPrice\njoinArrivalsAndNetPrice derive(costOfProdSupply = multiply(qnty,price_net)) ~> derivedAmountSpentOnSupply\nderivedAmountSpentOnSupply aggregate(groupBy(product_id),\n\titemsBought = sum(qnty),\n\t\tspentOnPurchace = sum(costOfProdSupply)) ~> Aggregate1\nAggregate1, marginByProduct join(Aggregate1@product_id == marginByProduct@product_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> TotalsAndMargins\nTotalsAndMargins derive(turnoverCoefficient = divide(marginByProduct,spentOnPurchace)) ~> MarginPercenOnStorageAndSales\nMarginPercenOnStorageAndSales select(mapColumn(\n\t\tproduct_id = Aggregate1@product_id,\n\t\titemsBought,\n\t\tspentOnPurchace,\n\t\tproduct_id = marginByProduct@product_id,\n\t\tmarginByProduct,\n\t\ttotalItemsSold,\n\t\tturnoverCoefficient\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nmarginOnSale select(mapColumn(\n\t\tid,\n\t\tdatetime,\n\t\tproduct_id,\n\t\tprice,\n\t\tcost,\n\t\tprice_net,\n\t\tmargin,\n\t\tprod_sold\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3 sink(input(\n\t\tid as integer,\n\t\tdatetime as timestamp,\n\t\tproduct_id as integer,\n\t\tprice as decimal(18,2),\n\t\tcost as decimal(18,2),\n\t\tprice_net as decimal(18,2),\n\t\tmargin as decimal(18,2),\n\t\tprod_sold as decimal(18,2)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tid,\n\t\tdatetime,\n\t\tproduct_id,\n\t\tprice,\n\t\tcost,\n\t\tprice_net,\n\t\tmargin,\n\t\tprod_sold\n\t),\n\tsaveOrder: 0,\n\terrorHandlingOption: 'stopOnFirstError') ~> MarginOnSalesT\nSelect2 sink(input(\n\t\tproduct_id as integer,\n\t\titemsBought as integer,\n\t\tspentOnPurchase as decimal(18,2),\n\t\tmarginByProduct as decimal(18,2),\n\t\ttotalItemsSold as integer,\n\t\tturnoverCoefficient as decimal(18,3)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: true,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tproduct_id,\n\t\titemsBought,\n\t\tspentOnPurchase = spentOnPurchace,\n\t\tmarginByProduct,\n\t\ttotalItemsSold,\n\t\tturnoverCoefficient\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> turnover"
		}
	}
}